<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.njnode.system.dao.UserDao">
	<resultMap id="BaseResultMap" type="cn.njnode.beans.system.User">

		<id column="id" jdbcType="VARCHAR" property="id" />
		<result column="username" jdbcType="VARCHAR" property="username" />
		<result column="password" jdbcType="VARCHAR" property="password" />
		<result column="salt" jdbcType="VARCHAR" property="salt" />
		<result column="role_names" jdbcType="VARCHAR" property="roleNames" />
		<result column="locked" jdbcType="BIT" property="locked" />
		<result column="des" jdbcType="VARCHAR" property="des" />
		<result column="pid" jdbcType="VARCHAR" property="pid" />
	</resultMap>

	<sql id="Base_Column_List">
		id, username, password, salt, role_names, locked, des, pid
	</sql>

	<insert id="addUser" parameterType="cn.njnode.beans.system.User">
		insert into sys_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="username != null">
				username,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="salt != null">
				salt,
			</if>
			<if test="roleNames != null">
				role_names,
			</if>
			<if test="locked != null">
				locked,
			</if>
			<if test="des != null">
				des,
			</if>
			<if test="pid != null">
				pid,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="salt != null">
				#{salt,jdbcType=VARCHAR},
			</if>
			<if test="roleNames != null">
				#{roleNames,jdbcType=VARCHAR},
			</if>
			<if test="locked != null">
				#{locked,jdbcType=BIT},
			</if>
			<if test="des != null">
				#{des,jdbcType=VARCHAR},
			</if>
			<if test="pid != null">
				#{pid,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>

	<delete id="deleteUserById" parameterType="java.lang.String">
		delete from sys_user
		where id = #{id,jdbcType=VARCHAR}
	</delete>

	<update id="updateUserById" parameterType="cn.njnode.beans.system.User">
		update sys_user
		<set>
			<if test="username != null">
				username = #{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="salt != null">
				salt = #{salt,jdbcType=VARCHAR},
			</if>
			<if test="roleNames != null">
				role_names = #{roleNames,jdbcType=VARCHAR},
			</if>
			<if test="locked != null">
				locked = #{locked,jdbcType=BIT},
			</if>
			<if test="des != null">
				des = #{des,jdbcType=VARCHAR},
			</if>
			<if test="pid != null">
				pid = #{pid,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>

	<select id="queryUserById" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_user
		where id = #{id,jdbcType=VARCHAR}
	</select>

	<select id="queryUserList" parameterType="cn.njnode.beans.system.User"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_user
		where 1=1
		<if test="username != null">
			AND username = #{username,jdbcType=VARCHAR}
		</if>
		<if test="password != null">
			AND password = #{password,jdbcType=VARCHAR}
		</if>
		<if test="salt != null">
			AND salt = #{salt,jdbcType=VARCHAR}
		</if>
		<if test="roleNames != null">
			AND role_names = #{roleNames,jdbcType=VARCHAR}
		</if>
		<if test="locked != null">
			AND locked = #{locked,jdbcType=BIT}
		</if>
		<if test="des != null">
			AND des = #{des,jdbcType=VARCHAR}
		</if>
		<if test="pid != null">
			AND pid = #{pid,jdbcType=VARCHAR}
		</if>
		ORDER BY id desc
	</select>

	<select id="queryRolesByUserName" parameterType="java.lang.String"
		resultType="java.lang.String">
		select role from sys_role
		left join sys_user_role
		on
		sys_role.id = sys_user_role.role_id
		left join sys_user
		on sys_user.id =
		sys_user_role.user_id
		where sys_user.username =
		#{username,jdbcType=VARCHAR}
	</select>

	<select id="queryPermisionByUserName" parameterType="java.lang.String"
		resultType="java.lang.String">
		select permision from sys_permision
		left join
		sys_role_permision
		on sys_role_permision.permision_id =
		sys_permision.id
		left join sys_role
		on sys_role.id =
		sys_role_permision.role_id
		left join sys_user_role
		on
		sys_user_role.role_id = sys_role.id
		left join sys_user
		on sys_user.id =
		sys_user_role.user_id
		where sys_user.username =
		#{username,jdbcType=VARCHAR}
	</select>
</mapper>