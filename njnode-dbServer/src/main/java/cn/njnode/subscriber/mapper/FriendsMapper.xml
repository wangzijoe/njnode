<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.njnode.subscriber.dao.FriendsDao">
	<resultMap id="BaseResultMap"
		type="cn.njnode.beans.subscriber.Friends">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="user_id" jdbcType="VARCHAR" property="userId" />
		<result column="friends_id" jdbcType="VARCHAR" property="friendsId" />
		<result column="relationship" jdbcType="INTEGER" property="relationship" />
		<result column="group" jdbcType="VARCHAR" property="group" />
	</resultMap>
	
	<sql id="Base_Column_List">
		id, user_id, friends_id, relationship, group
	</sql>

	<insert id="addFriends" parameterType="cn.njnode.beans.subscriber.Friends">
		insert into t_friends
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="friendsId != null">
				friends_id,
			</if>
			<if test="relationship != null">
				relationship,
			</if>
			<if test="group != null">
				group,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=VARCHAR},
			</if>
			<if test="friendsId != null">
				#{friendsId,jdbcType=VARCHAR},
			</if>
			<if test="relationship != null">
				#{relationship,jdbcType=INTEGER},
			</if>
			<if test="group != null">
				#{group,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
		
	<delete id="deleteFriendsById" parameterType="java.lang.Integer">
		delete from t_friends
		where id = #{id,jdbcType=INTEGER}
	</delete>
	
	<update id="updateFriendsById" parameterType="cn.njnode.beans.subscriber.Friends">
		update t_friends
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=VARCHAR},
			</if>
			<if test="friendsId != null">
				friends_id = #{friendsId,jdbcType=VARCHAR},
			</if>
			<if test="relationship != null">
				relationship = #{relationship,jdbcType=INTEGER},
			</if>
			<if test="group != null">
				group = #{group,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
		
	<select id="queryFriendsById" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_friends
		where id = #{id,jdbcType=INTEGER}
	</select>
	
	<select id="queryFriendsList" parameterType="cn.njnode.beans.subscriber.Friends"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_friends
		where 1=1
		<if test="userId != null">
			AND user_id = #{userId,jdbcType=VARCHAR},
		</if>
		<if test="friendsId != null">
			AND friends_id = #{friendsId,jdbcType=VARCHAR},
		</if>
		<if test="relationship != null">
			AND relationship = #{relationship,jdbcType=INTEGER},
		</if>
		<if test="group != null">
			AND group = #{group,jdbcType=VARCHAR},
		</if>
		ORDER BY id desc
	</select>
</mapper>